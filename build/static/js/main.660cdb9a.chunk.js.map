{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/Article-content.js","components/ArticlesList.js","pages/ArticlesListPage.js","components/CommentsList.js","components/UpvoteSection.js","pages/NotFoundPage.js","components/AddCommentForm.js","pages/ArticlePage.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","react_default","a","createElement","Fragment","AboutPage","articles","name","title","content","ArticlesList","_ref","map","article","key","react_router_dom","className","to","concat","substring","ArticlesListPage","components_ArticlesList","articleContent","CommentsList","comments","comment","username","text","UpvoteSection","articleName","upvotes","setArticleInfo","upvoteArticle","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","result","body","wrap","_context","prev","next","fetch","method","sent","json","stop","apply","this","arguments","id","onClick","NotFoundPage","AddCommentForm","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","commentText","setCommentText","addComment","JSON","stringify","headers","Content-Type","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","pages_NotFoundPage","otherArticles","filter","components_UpvoteSection","paragraph","components_CommentsList","components_AddCommentForm","NavBar","App","src_NavBar","react_router","path","component","exact","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"yQAaeA,EAXC,kBACZC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,qPAEJF,EAAAC,EAAAC,cAAA,4DAFI,2FAGAF,EAAAC,EAAAC,cAAA,yPACAF,EAAAC,EAAAC,cAAA,kTCIWE,EAXE,kBACbJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,qPAEJF,EAAAC,EAAAC,cAAA,4DAFI,2FAGAF,EAAAC,EAAAC,cAAA,yPACAF,EAAAC,EAAAC,cAAA,kTCmEWG,EA5EE,CACb,CACIC,KAAM,cACNC,MAAO,iCACPC,QAAS,8hDAqBP,CACFF,KAAM,aACNC,MAAO,2CACPC,QAAS,kjDAqBN,CACHF,KAAM,wBACNC,MAAO,wBACPC,QAAS,yjDCjCFC,EAhBM,SAAAC,GAAA,IAAEL,EAAFK,EAAEL,SAAF,OACjBL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEIE,EAASM,IAAI,SAACC,EAAQC,GAAT,OAETb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACIC,UAAU,oBACVF,IAAKA,EAAKG,GAAE,YAAAC,OAAcL,EAAQN,OAElCN,EAAAC,EAAAC,cAAA,UAAKU,EAAQL,OACbP,EAAAC,EAAAC,cAAA,SAAIU,EAAQJ,QAAQ,GAAGU,UAAU,EAAE,KAAnC,YCDDC,EAPS,kBACpBnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACkB,EAAD,CAAcf,SAAUgB,qCCKbC,EAXM,SAAAZ,GAAA,IAAEa,EAAFb,EAAEa,SAAF,OACjBvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,uBACCqB,EAASZ,IAAI,SAACa,EAAQX,GAAT,OACVb,EAAAC,EAAAC,cAAA,OAAKa,UAAU,UAAUF,IAAKA,GAC1Bb,EAAAC,EAAAC,cAAA,UAAKsB,EAAQC,UACbzB,EAAAC,EAAAC,cAAA,UAAKsB,EAAQE,WCYVC,EAnBO,SAAAjB,GAA2C,IAAzCkB,EAAyClB,EAAzCkB,YAAaC,EAA4BnB,EAA5BmB,QAASC,EAAmBpB,EAAnBoB,eAEpCC,EAAa,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAlC,EAAAmC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAlC,EAAAuC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,MAAK,iBAAA3B,OAAkBW,EAAlB,WAAuC,CAC7DiB,OAAQ,SAFM,cACZP,EADYG,EAAAK,KAAAL,EAAAE,KAAA,EAICL,EAAOS,OAJR,OAIZR,EAJYE,EAAAK,KAKlBhB,EAAeS,GALG,wBAAAE,EAAAO,SAAAX,MAAH,yBAAAL,EAAAiB,MAAAC,KAAAC,YAAA,GAQnB,OACInD,EAAAC,EAAAC,cAAA,OAAKkD,GAAG,mBACJpD,EAAAC,EAAAC,cAAA,UAAQmD,QAAS,kBAAMtB,MAAvB,UACA/B,EAAAC,EAAAC,cAAA,uCAA+B2B,EAA/B,YCRGyB,EAJM,kBACjBtD,EAAAC,EAAAC,cAAA,kCCuCWqD,EAxCQ,SAAA7C,GAAkC,IAAhCkB,EAAgClB,EAAhCkB,YAAaE,EAAmBpB,EAAnBoB,eAAmB0B,EACrBC,mBAAS,IADYC,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAAuB,EAAA,GAC9C/B,EAD8CiC,EAAA,GACpCE,EADoCF,EAAA,GAAAG,EAEfJ,mBAAS,IAFMK,EAAA7B,OAAA0B,EAAA,EAAA1B,CAAA4B,EAAA,GAE9CE,EAF8CD,EAAA,GAEjCE,EAFiCF,EAAA,GAG/CG,EAAU,eAAAjC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAlC,EAAAmC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAlC,EAAAuC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMC,MAAK,iBAAA3B,OAAkBW,EAAlB,gBAA6C,CAC/DiB,OAAQ,OACRN,KAAM2B,KAAKC,UAAU,CAAC1C,WAAUC,KAAMqC,IACtCK,QAAQ,CACJC,eAAgB,sBALb,cACT/B,EADSG,EAAAK,KAAAL,EAAAE,KAAA,EASIL,EAAOS,OATX,OASTR,EATSE,EAAAK,KAUfhB,EAAeS,GACfqB,EAAY,IACZI,EAAe,IAZA,wBAAAvB,EAAAO,SAAAX,MAAH,yBAAAL,EAAAiB,MAAAC,KAAAC,YAAA,GAehB,OACInD,EAAAC,EAAAC,cAAA,OAAKkD,GAAG,oBACJpD,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,qBAEIF,EAAAC,EAAAC,cAAA,SACIoE,KAAK,OAAOC,MAAO9C,EACnB+C,SAAU,SAACC,GAAD,OAAWb,EAAYa,EAAMC,OAAOH,WAGtDvE,EAAAC,EAAAC,cAAA,yBAEIF,EAAAC,EAAAC,cAAA,YAAUyE,KAAK,IAAIC,KAAK,KACpBL,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAWT,EAAeS,EAAMC,OAAOH,WAGzDvE,EAAAC,EAAAC,cAAA,UAAQmD,QAAU,kBAAMY,MAAxB,iBCWGY,EAxCI,SAAAnE,GAAY,IAErBJ,EAFqBI,EAAVoE,MAEAC,OAAOzE,KAClBM,EAAUS,EAAe2D,KAAK,SAAApE,GAAO,OAAEA,EAAQN,OAASA,IAHnCkD,EAIWC,mBAAS,CAAC5B,QAAQ,EAAGN,SAAS,KAJzCmC,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAAuB,EAAA,GAIpByB,EAJoBvB,EAAA,GAIP5B,EAJO4B,EAAA,GAkB3B,GAbAwB,oBAAU,YACS,eAAAlD,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAlC,EAAAmC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAlC,EAAAuC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEOC,MAAK,iBAAA3B,OAAkBX,IAF9B,cAERgC,EAFQG,EAAAK,KAAAL,EAAAE,KAAA,EAIKL,EAAOS,OAJZ,OAIRR,EAJQE,EAAAK,KAMdhB,EAAeS,GAND,wBAAAE,EAAAO,SAAAX,MAAH,yBAAAL,EAAAiB,MAAAC,KAAAC,YAAA,EASfgC,IACF,CAAC7E,KAEEM,EAAS,OAAOZ,EAAAC,EAAAC,cAACkF,EAAD,MAErB,IAAMC,EAAgBhE,EAAeiE,OAAO,SAAA1E,GAAO,OAAIA,EAAQN,OAASA,IACxE,OACIN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,UAAKU,EAAQL,OACbP,EAAAC,EAAAC,cAACqF,EAAD,CACI3D,YAAatB,EACbuB,QAASoD,EAAYpD,QACrBC,eAAkBA,IAErBlB,EAAQJ,QAAQG,IAAI,SAAC6E,EAAW3E,GAAZ,OACjBb,EAAAC,EAAAC,cAAA,KAAGW,IAAKA,GAAM2E,KAElBxF,EAAAC,EAAAC,cAACuF,EAAD,CAAclE,SAAU0D,EAAY1D,WACpCvB,EAAAC,EAAAC,cAACwF,EAAD,CAAgB9D,YAAatB,EAAMwB,eAAgBA,IACnD9B,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACkB,EAAD,CAAcf,SAAUgF,aC3BjBM,SAXA,kBACX3F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAME,GAAG,KAAT,QACAhB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAME,GAAG,UAAT,SACAhB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAME,GAAG,kBAAT,iBCuBD4E,mLArBT,OACE5F,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACId,EAAAC,EAAAC,cAAA,OAAKa,UAAU,OACbf,EAAAC,EAAAC,cAAC2F,EAAD,MACA7F,EAAAC,EAAAC,cAAA,OAAKkD,GAAG,aACNpD,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,KACE9F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAajG,EAAUkG,OAAK,IAC5CjG,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAa5F,IAClCJ,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAa7E,IAC1CnB,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAanB,IAC1C7E,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOE,UAAa1C,eAbpB4C,aCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAA9F,GAAiD,IAA9CgG,EAA8ChG,EAA9CgG,OAAQC,EAAsCjG,EAAtCiG,OAAQC,EAA8BlG,EAA9BkG,OAAQC,EAAsBnG,EAAtBmG,OAAQC,EAAcpG,EAAdoG,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCAdW,IAASC,OACPhH,EAAAC,EAAAC,cAACF,EAAAC,EAAMgH,WAAP,KACEjH,EAAAC,EAAAC,cAACgH,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.660cdb9a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst HomePage =() =>(\r\n    <>\r\n    <h1>My Blog</h1>\r\n    <p>React components implement a render() method that takes input data and returns what to display. This example uses an XML-like syntax called JSX. Input data that is passed into the component can be accessed by render() via this.props.\r\n\r\n<b>JSX is optional and not required to use React. </b>Try the Babel REPL to see the raw JavaScript code produced by the JSX compilation step.</p>\r\n    <p>In addition to taking input data (accessed via this.props), a component can maintain internal state data (accessed via this.state). When a component’s state data changes, the rendered markup will be updated by re-invoking render().</p>\r\n    <p>Using props and state, we can put together a small Todo application. This example uses state to track the current list of items as well as the text that the user has entered. Although event handlers appear to be rendered inline, they will be collected and implemented using event delegation.</p>\r\n    </>\r\n)\r\n\r\nexport default HomePage;\r\n","import React from 'react'\r\n\r\nconst AboutPage =() =>(\r\n    <>\r\n    <h1>About Me</h1>\r\n    <p>React components implement a render() method that takes input data and returns what to display. This example uses an XML-like syntax called JSX. Input data that is passed into the component can be accessed by render() via this.props.\r\n\r\n<b>JSX is optional and not required to use React. </b>Try the Babel REPL to see the raw JavaScript code produced by the JSX compilation step.</p>\r\n    <p>In addition to taking input data (accessed via this.props), a component can maintain internal state data (accessed via this.state). When a component’s state data changes, the rendered markup will be updated by re-invoking render().</p>\r\n    <p>Using props and state, we can put together a small Todo application. This example uses state to track the current list of items as well as the text that the user has entered. Although event handlers appear to be rendered inline, they will be collected and implemented using event delegation.</p>\r\n    </>\r\n)\r\n\r\nexport default AboutPage;\r\n","const articles = [\r\n    {\r\n        name: 'learn-react',\r\n        title: 'The Fastest Way to Learn React',\r\n        content: [\r\n            `Welcome! Today we're going to be talking about the fastest way to\r\n            learn React. We'll be discussing some topics such as proin congue\r\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n            sodales purus euismod.`,\r\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n        ]\r\n    },    {\r\n        name: 'learn-node',\r\n        title: 'How to Build a Node Server in 10 Minutes',\r\n        content: [\r\n            `In this article, we're going to be talking looking at a very quick way\r\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\r\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n            sodales purus euismod.`,\r\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n        ]\r\n    },     {\r\n        name: 'my-thoughts-on-resume',\r\n        title: 'My Thoughts on Resume',\r\n        content: [\r\n            `Today is the day I talk about something which scares most people: resumes.\r\n            In reality, I'm not sure why people have such a hard time with proin congue\r\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n            sodales purus euismod.`,\r\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n        ]\r\n    },  \r\n];\r\n\r\nexport default articles;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ArticlesList = ({articles}) =>(\r\n    <>\r\n    {\r\n        articles.map((article,key) => (\r\n        \r\n            <Link \r\n                className=\"article-list-item\" \r\n                key={key} to={`/article/${article.name}`}\r\n            >\r\n                <h3>{article.title}</h3>\r\n                <p>{article.content[0].substring(0,150)}...</p>\r\n            </Link>\r\n        ))\r\n    }\r\n    </>\r\n);\r\nexport default ArticlesList;","import React from 'react'\r\nimport articleContent from \"./Article-content\";\r\nimport ArticlesList from \"../components/ArticlesList\";\r\n\r\n\r\nconst ArticlesListPage =() =>(\r\n    <>\r\n    <h1>Articles</h1>\r\n    <ArticlesList articles={articleContent} />\r\n    </>\r\n)\r\n\r\nexport default ArticlesListPage;\r\n","import React from 'react';\r\n\r\nconst CommentsList = ({comments}) => (\r\n    <>\r\n    <h3>Comments:</h3>\r\n    {comments.map((comment,key) => (\r\n        <div className=\"comment\" key={key}>\r\n            <h4>{comment.username}</h4>\r\n            <h4>{comment.text}</h4>\r\n        </div>\r\n    ))}\r\n    </>\r\n);\r\nexport default CommentsList","import React from 'react';\r\nconst UpvoteSection = ({articleName, upvotes, setArticleInfo}) =>{\r\n    \r\n    const upvoteArticle = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/upvote`,{\r\n            method: 'post',\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n\r\n    return(\r\n        <div id=\"upvotes-section\">\r\n            <button onClick={() => upvoteArticle()}>Upvote</button>\r\n            <p>This post has been upvoted {upvotes} times</p>\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nexport default UpvoteSection;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <h1>404: Page Not Found</h1>\r\n)\r\n\r\nexport default NotFoundPage;","import React, {useState} from 'react';\r\n\r\nconst AddCommentForm = ({articleName, setArticleInfo}) =>{\r\n    const [username, setUsername] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n    const addComment = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n                method: 'post',\r\n                body: JSON.stringify({username, text: commentText}),\r\n                headers:{\r\n                    'Content-Type': 'application/json',\r\n            }\r\n        });\r\n\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n        setUsername(\"\");\r\n        setCommentText(\"\");\r\n    }\r\n\r\n    return (\r\n        <div id=\"add-comment-form\">\r\n            <h3>Add a Comment</h3>\r\n            <label>\r\n                Name:\r\n                <input \r\n                    type=\"text\" value={username} \r\n                    onChange={(event) => setUsername(event.target.value)}\r\n                />\r\n            </label>\r\n            <label>\r\n                Comments:\r\n                <textarea rows=\"4\" cols=\"50\" \r\n                    value={commentText} \r\n                    onChange={(event) => setCommentText(event.target.value)} \r\n                />\r\n            </label>\r\n            <button onClick ={() => addComment()}>Add Comment</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddCommentForm;","import React, {useState, useEffect} from 'react'\r\nimport articleContent from \"./Article-content\";\r\nimport ArticlesList from \"../components/ArticlesList\";\r\nimport CommentsList from \"../components/CommentsList\";\r\nimport UpvoteSection from \"../components/UpvoteSection\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\nimport AddCommentForm from \"../components/AddCommentForm\";\r\n\r\nconst ArticlePage =({match}) =>{\r\n\r\n    const name=match.params.name;\r\n    const article = articleContent.find(article=>article.name === name);\r\n    const [articleInfo, setArticleInfo] = useState({upvotes:0, comments:[]});\r\n    useEffect(() =>{\r\n        const fetchData = async () =>{\r\n            \r\n            const result = await fetch(`/api/articles/${name}`);\r\n          \r\n            const body = await result.json();\r\n            \r\n            setArticleInfo(body);\r\n        }\r\n    \r\n        fetchData();\r\n    },[name])\r\n\r\n    if (!article) return <NotFoundPage />\r\n\r\n    const otherArticles = articleContent.filter(article => article.name !== name);\r\n    return (\r\n        <>\r\n        <h1>{article.title}</h1>\r\n        <UpvoteSection \r\n            articleName={name} \r\n            upvotes={articleInfo.upvotes} \r\n            setArticleInfo = {setArticleInfo}\r\n        />\r\n        {article.content.map((paragraph, key) => (\r\n            <p key={key}>{paragraph}</p>\r\n        ))}\r\n        <CommentsList comments={articleInfo.comments} />\r\n        <AddCommentForm articleName={name} setArticleInfo={setArticleInfo}/>\r\n        <h3>Other Articles</h3>\r\n        <ArticlesList articles={otherArticles} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ArticlePage;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\nconst NavBar = () =>(\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/about\">About</Link>\r\n                <Link to=\"/articles-list\">Articles</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\nexport default NavBar;","import HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport NavBar from './NavBar';\nimport './App.css';\nimport NotFoundPage from './pages/NotFoundPage';\n\nclass App extends Component {\n    render() \n    {\n      return (\n        <Router>\n            <div className=\"App\">\n              <NavBar />\n              <div id=\"page-body\">\n                <Switch>\n                  <Route path=\"/\" component = {HomePage} exact/>\n                  <Route path=\"/about\" component = {AboutPage}/>\n                  <Route path=\"/articles-list\" component = {ArticlesListPage}/>\n                  <Route path=\"/article/:name\" component = {ArticlePage}/>\n                  <Route component = {NotFoundPage} />\n                </Switch>\n                \n              </div>\n              \n            </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}